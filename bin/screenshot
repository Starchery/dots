#!/bin/bash
# teiler - A script to share (german word: teilen) screenshots/casts for tiling WMs - Pun intended
# (c) Rasmus Steinke <rasi at xssn dot at>
# Additional Ideas, testing and some code by Zeltak <zeltak at gmail dot com>
#
# Requirements:
# dmenu, scrot, bc, some notification daemon


#changelog
#v0.8
#Put notify-send into its own function, Made delay being calculated from counter value.
#v0.7
#Massive Code Cleanup
#v0.6
#Countdown script stolen from Google and integrated.
#v0.5
#added clip uploading
#v0.4
#added screencast function
#v0.3
#added 1.notifications 2.unique names for each type (for quick launch) 3.better photo editor (pinta) 4.dmenu title
#v1.0
#revamped by baitinq. Eliminated most of the depends, made it simpler to use.


############### Configuration options ##############################

IMG_PATH=$HOME/Pictures
FILEMASK=%Y-%m-%d-@%H-%M-%S-screenshot.png
RES=1600x900  #set your screen resolution
TIME=3000       #How long will notifications be visible (ms)?
COUNTER=3000    #Ms to count for delay
. "${XDG_CACHE_HOME}/wal/colors.sh"

################## Configuration End ##############################

prog="full
delayed
region"


cmd=$(dmenu -nb "$color0" -nf "$color15" -sb "$color1" -sf "$color15" -i -p 'Screenshot:' <<< "$prog")

(( rounded_num= ($COUNTER + (2 - 1) / 2)))

cd $IMG_PATH
case ${cmd%% *} in

    #for local screenshots
    Full)            scrot -d 1 "$FILEMASK" && notify-send -u low -t ${TIME} "Screenshot saved"  ;;
    Delayed)           notify-send -u low -t $rounded_num "Screenshot in $(($COUNTER / 1000)) seconds" && sleep $(($COUNTER / 1000)) && scrot -d 1 "$FILEMASK" && notify-send -u low -t ${TIME} "Screenshot saved"  ;;
    Region)                      scrot -s "$FILEMASK" && notify-send -u low -t ${TIME} "Screenshot saved"    ;;
	  *)		exec "'${cmd}'"  ;;
esac
